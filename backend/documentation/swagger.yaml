openapi: 3.0.3
info:
  title: FSW-2 Backend API Documentation
  description: |-
    Api documentation FWS-2 Binar
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/
  - url: http://production.binar.com
tags:
  - name: brands
    description: Brands CRUD
  - name: categories
    description: Category CRUD
  - name: cartItem
    description: CRUD related to Shopping cart
  - name: order
    description: CRUD related to order
paths:
  /brands:
    get:
      tags:
        - brands
      summary: List all of available brands
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Brand"
        "400":
          description: Invalid status value
    post:
      tags:
        - brands
      summary: Create new brand
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Brand"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Brand"
        "400":
          description: Invalid status value
  /brands/{brandId}:
    patch:
      tags:
        - brands
      summary: Update existing brand by providing its id and updated values
      parameters:
        - name: brandId
          in: path
          description: ID of article to update
          required: true
          schema:
            type: integer
            format: int64
        - name: role
          in: header
          description: role of user to update
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Brand"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid status value
    delete:
      tags:
        - brands
      summary: delete selected brand
      parameters:
        - name: brandId
          in: path
          description: ID of brand to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid status value
  /categories:
    get:
      tags:
        - categories
      summary: List all of available categories
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        "400":
          description: Invalid status value
    post:
      tags:
        - categories
      summary: Create new category
      requestBody:
        description: Update an existent pet in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Category"
        "400":
          description: Invalid status value
  /categories/{categoryId}:
    patch:
      tags:
        - categories
      summary: Update existing category by providing its id and updated values
      parameters:
        - name: categoryId
          in: path
          description: ID of article to update
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid status value
    delete:
      tags:
        - categories
      summary: delete selected categiry
      parameters:
        - name: categoryId
          in: path
          description: ID of category to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid status value
  /cartItem:
    get:
      tags:
        - cartItem
      summary: Displays all the items in the shopping cart
      description: Displays all the items in the shopping cart
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CartItem"
        "400":
          description: Invalid status value
        "500":
          description: Internal server error
    post:
      tags:
        - cartItem
      summary: Add items to the shopping cart
      description: Add items to the shopping cart
      requestBody:
        description: Create a new item in the shopping cart
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CartItem"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CartItem"
        "400":
          description: Invalid status value
        "500":
          description: Internal server error
  /cartItem/{userId}:
    get:
      tags:
        - cartItem
      summary: Displays all of the item in the shopping cart
      description: Displays all of the item in the shopping cart by userId
      parameters:
        - name: userId
          in: path
          description: ID of an user
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CartItem"
        "400":
          description: Invalid status value
        "500":
          description: Internal server error
  /cartItem/{id}:
    patch:
      tags:
        - cartItem
      summary: Update an item inside the shopping cart
      parameters:
        - name: id
          in: path
          description: ID of the item to be updated
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: Item dalam keranjang belanja tidak ditemukan
        "500":
          description: Internal server error
    delete:
      tags:
        - cartItem
      summary: Delete an item inside the shopping cart
      parameters:
        - name: id
          in: path
          description: id of an item
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: Item dalam keranjang belanja tidak ditemukan
        "500":
          description: Internal server error
  /order:
    get:
      tags:
        - order
      summary: Displays all the orders
      description: Displays all the orders
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "500":
          description: Internal Server Error get all Orders
    post:
      tags:
        - order
      summary: Add an order
      description: Add an order
      requestBody:
        description: Create a new order
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Bad request
  /order/{id}:
    get:
      tags:
        - order
      summary: Display an order
      description: Display an order by id
      parameters:
        - name: id
          in: path
          description: id of an order
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "404":
          description: Order not found
        "500":
          description: Internal Server Error get Order by Id
    patch:
      tags:
        - order
      summary: Update an order
      description: Update an order by id
      parameters:
        - name: id
          in: path
          description: id of an order
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid status value
    delete:
      tags:
        - order
      summary: Delete an order
      description: Delete an order by id
      parameters:
        - name: id
          in: path
          description: id of an order
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: Order not found
        "500":
          description: Internal server error
  /order-items:
    get:
      tags:
        - orderItem
      summary: Displays all the orderItems
      description: Displays all the orderItems
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItem"
        "500":
          description: Internal Server Error get all OrderItems
    post:
      tags:
        - orderItem
      summary: Add an orderItem
      description: Add an orderItem
      requestBody:
        description: Create a new orderItem
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderItem"
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderItem"
        "400":
          description: Invalid status value
  /order-items/{id}:
    get:
      tags:
        - orderItem
      summary: Display an orderItem
      description: Display an orderItem by id
      parameters:
        - name: id
          in: path
          description: id of an orderItem
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderItem"
        "404":
          description: OrderItem not found
        "500":
          description: Internal Server Error get OrderItem by Id
    patch:
      tags:
        - orderItem
      summary: Update an orderItem
      description: Update an orderItem by id
      parameters:
        - name: id
          in: path
          description: id of an orderItem
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "400":
          description: Invalid status value
    delete:
      tags:
        - orderItem
      summary: Delete an orderItem
      description: Delete an orderItem by id
      parameters:
        - name: id
          in: path
          description: id of an orderItem
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiResponse"
        "404":
          description: OrderItem not found
        "500":
          description: Internal server error
components:
  schemas:
    Brand:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Puma
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Sneakers1
    CartItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 1
        productId:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 1
    Order:
      type: object
      properties:
        id:
          type: integer
          example: 1
        userId:
          type: integer
          example: 1
        totalPrice:
          type: number
          example: 1
        shippingAddress:
          type: string
          example: Indonesia
        orderStatus:
          type: string
          description: Order Status
          example: approved
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          example: 1
        orderId:
          type: integer
          example: 1
        productId:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 1
        price:
          type: integer
          example: 1
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 200
        type:
          type: string
        message:
          type: string
          example: "success"
